@page
@model myApp.B2C.Pages.AboutModel
@{
    ViewData["Title"] = "About";
}

<div class="container mt-4">
    <h1 class="display-4">About Identity Configuration</h1>
    
    <div class="row">
        <div class="col-md-8">
            <div class="card mb-4">
                <div class="card-header">
                    <h3>Identity Strategy: Azure AD B2C Federated Identity</h3>
                </div>
                <div class="card-body">
                    <h5>Authentication Method</h5>
                    <p class="text-muted">Azure Active Directory B2C with social and local account providers</p>
                    
                    <h5>Authentication Provider</h5>
                    <p class="text-muted">@Model.AuthenticationProvider</p>
                    
                    <h5>B2C Tenant</h5>
                    <p class="text-muted">@Model.B2CTenant</p>
                    
                    <h5>Policy</h5>
                    <p class="text-muted">@Model.B2CPolicy</p>
                    
                    <h5>Hosting Mode</h5>
                    <p class="text-muted">@Model.HostingMode</p>
                    
                    <h5>Key Features</h5>
                    <ul>
                        <li>Social identity providers (Google, Facebook, Microsoft, etc.)</li>
                        <li>Local account registration and sign-in</li>
                        <li>Custom user flows and policies</li>
                        <li>JWT token-based authentication</li>
                        <li>Rich user profile management</li>
                        <li>Multi-factor authentication support</li>
                    </ul>
                    
                    <h5>B2C Configuration</h5>
                    <div class="alert alert-info">
                        <strong>Client ID:</strong> @Model.MaskedClientId<br>
                        <strong>Authority:</strong> @Model.Authority<br>
                        <strong>Callback Path:</strong> @Model.CallbackPath
                    </div>
                </div>
            </div>
            
            @if (User.Identity?.IsAuthenticated == true)
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h3>Current User Information</h3>
                    </div>
                    <div class="card-body">
                        <h5>Identity Details</h5>
                        <table class="table table-sm">
                            <tr>
                                <td><strong>Username:</strong></td>
                                <td>@User.Identity.Name</td>
                            </tr>
                            <tr>
                                <td><strong>Authentication Type:</strong></td>
                                <td>@User.Identity.AuthenticationType</td>
                            </tr>
                            <tr>
                                <td><strong>Is Authenticated:</strong></td>
                                <td>@User.Identity.IsAuthenticated</td>
                            </tr>
                        </table>
                        
                        @if (User.Claims.Any())
                        {
                            <h5 class="mt-3">JWT Token Claims</h5>
                            <div class="table-responsive">
                                <table class="table table-sm table-striped">
                                    <thead>
                                        <tr>
                                            <th>Type</th>
                                            <th>Value</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var claim in User.Claims)
                                        {
                                            <tr>
                                                <td><code>@claim.Type</code></td>
                                                <td>@claim.Value</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h3>Authentication Required</h3>
                    </div>
                    <div class="card-body">
                        <p>You are not currently authenticated. To see user information and JWT claims from Azure AD B2C:</p>
                        <a href="/MicrosoftIdentity/Account/SignIn" class="btn btn-primary">Sign In with Azure AD B2C</a>
                        <div class="alert alert-info mt-3">
                            <strong>Note:</strong> B2C authentication requires proper configuration with Azure AD B2C tenant, application registration, and user flows/policies.
                        </div>
                    </div>
                </div>
            }
        </div>
        
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5>Demo Context</h5>
                </div>
                <div class="card-body">
                    <p class="small text-muted">
                        This is part of the BenkoTIPS Identity Options demo showcasing different authentication strategies using .NET Aspire.
                    </p>
                    <p class="small text-muted">
                        <strong>Azure AD B2C</strong> demonstrates federated identity with support for both social providers and local accounts. B2C provides enterprise-grade identity management with custom branding and user flows.
                    </p>
                    <hr>
                    <h6>Other Demo Apps</h6>
                    <ul class="small">
                        <li>Simple - Manual cookie authentication</li>
                        <li>SqlIdentity - ASP.NET Identity with EF Core</li>
                        <li>EasyAuth - Azure App Service built-in auth</li>
                        <li>KeyCloak - Self-hosted identity provider</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
